% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Func-tidy_table.R
\name{tidy_table}
\alias{tidy_table}
\alias{tidy_data}
\alias{tidy_lift_header}
\title{Tidy up messy raw data}
\usage{
tidy_table(
  DT,
  header_rows,
  long_cols = NULL,
  wide_cols = NULL,
  wide_names = NULL,
  wide_fill = 1:(length(header_rows) - 1),
  wide_split = NULL,
  cols_delete = NULL,
  cols_keepnames = NULL,
  clean_long_names = TRUE,
  pivot = TRUE,
  value_name = "value",
  wide_as_numeric = FALSE,
  verbose = FALSE
)

tidy_data(
  DT,
  tidyHeader,
  pivot = TRUE,
  value_name = "value",
  wide_as_numeric = TRUE
)

tidy_lift_header(
  DT,
  header_rows,
  long_cols = NULL,
  wide_cols = NULL,
  wide_fill = 1:(length(header_rows) - 1),
  clean_names = TRUE,
  cols_delete = NULL,
  cols_keepnames = NULL,
  wide_as_numeric = FALSE
)
}
\arguments{
\item{header_rows}{An integer vector specifying row numbers for headers.  The rows below will be treated as data, and the rows above will be ignored.}

\item{long_cols}{Specifying long columns, \code{.cnames} compatible.}

\item{wide_cols}{Specifying wide columns, \code{.cnames} compatible.}

\item{wide_names}{Names for each layer of wide headers.}

\item{wide_fill}{Position of wide header layers to be fill (to the right).}

\item{wide_split}{Split character (e.g. "_") in case wide header is in single row (e.g. in form of "Gross_Premium").}

\item{cols_delete}{Specifying columns to be deleted, \code{.cnames} compatible.  \code{NA} means to delete all-NA headers.}

\item{cols_keepnames}{Specifying columns to use Original data.frame header, \code{.cnames} compatible.}

\item{clean_long_names}{Logical, indicating whether to use \code{makenm_clean} for long names.}

\item{pivot}{Logical, indicating whether to pivot wide columns into long data.}

\item{value_name}{Name of value column.  Only relavent when \code{pivot} is TRUE}

\item{wide_as_numeric}{Logical, indicating whether to convert all wide columns into numeric type.}

\item{verbose}{Logical.  Whether to show more messages.}
}
\description{
Tidy up messy raw data
}
\examples{
x <- data.table::data.table(
          V1 = c("CompA Data", "RiskProfile", NA, "Lbound", "0", "100"),
          V2 = c(NA, NA, NA, NA, NA, NA),
          V3 = c(NA, NA, NA, "Ubound", "100", "500"),
          V4 = c(NA, "Property", "Gross", "No. of Risks", "10", "2"),
          V5 = c(NA, NA, NA, "Sum Insured", "1000", "2000"),
          V6 = c(NA, NA, NA, "Premium", "1", "2"),
          V7 = c(NA, NA, "Net", "N", "10", "2"),
          V8 = c(NA, NA, NA, "Sum Insured", "500", "200"),
          V9 = c(NA, NA, NA, "Premium", "0.5", "0.2"),
         V10 = c(NA, "CAR/EAR", "Gross", "No. of Risks", "5", "0"),
         V11 = c(NA, NA, NA, "Sum Insured", "500", "0"),
         V12 = c(NA, NA, NA, "Premium", "10", "0"),
         V13 = c(NA, NA, "Net", "N", "5", "0"),
         V14 = c(NA, NA, NA, "Sum Insured", "100", "0"),
         V15 = c(NA, NA, NA, "Premium", "2", "0"),
         V16 = c(NA, NA, NA, NA, NA, NA),
         V17 = c(NA, NA, NA, "Company", "A", "A")
  )
(HD <- tidy_header(x[2:4], wide_cols = 4:16, wide_names = c("LOB", "Account", "Var"), cols_delete = NA))
tidy_data(x[5:6], HD)
tidy_data(x[5:6], HD, pivot = FALSE)
(HD2 <- data.table::copy(HD)[grepl("^No\\\\.", Var), Var := "N"][...col... == 1, ...LONG... := "Lbound"][])
tidy_data(x[5:6], HD2)
tidy_table(x, header_rows = 2:4, wide_cols = 4:16, wide_names = c("LOB", "Account", "Var"), cols_delete = NA)
tidy_table(x, header_rows = 2:4, wide_cols = 4:16, wide_names = c("LOB", "Account", "Var"), pivot = FALSE, cols_delete = NULL)
tidy_lift_header(x, 2:4, wide_cols = 4:16)
tidy_lift_header(x, 2:4)

y <- data.table::data.table(
  V1 = c("Gross_SI", 10),
  V2 = c("Gross_Prem", 1),
  V3 = c("Net_SI", 8)
)
tidy_table(y, 1, wide_cols = 1:3, wide_names = c("Account", "Var"), wide_split = "_")
}
