% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Func-string.R
\name{vextract}
\alias{vextract}
\title{Extract certain element from one vector}
\usage{
vextract(
  x,
  patterns,
  exclusions = NULL,
  fill_direction = NULL,
  ignore_case = TRUE,
  trim = TRUE
)
}
\arguments{
\item{x}{A character vector.}

\item{patterns}{A vector means "AND" relations. See examples.}

\item{exclusions}{Patterns to be excluded (i.e. set to FALSE in results).}

\item{fill_direction}{If \code{NULL}, no fill.  Otherwise, passed to \code{vnafill}'s \code{direction} parameter.}

\item{trim}{Whether to trim white spaces of final results.}
}
\description{
Useful for messy data cleaning
}
\examples{
x <- c("", "Property_NoOfRisk", "SI", "Prem", "MB_NoOfRisk", "SI", "Prem", "\% of Prem")
vextract(x, c("property|mb"))
vextract(x, c("property|mb"), ignore_case = FALSE)
vextract(x, c("property|mb"), fill_direction = "down")
vextract(x, c("property", "(.*)_NoOfRisk")) ## AND relation
## use regex to get full contents
vextract(x, ".*NoOfRisk")
## or use ifelse and vdetect
ifelse(vdetect(x, "NoOfRisk"), x, NA)
## regex can also extract the key contents in parenthesis (i.e. capture group in regex)
vextract(x, "(.*)_NoOfRisk")
## Use `exclusions` to increase accuracy
vextract(x, c("SI|Prem"), exclusions = "\% of Prem")
vextract(x, c("SI|^Prem")) ## a well-defined regex can also work
}
